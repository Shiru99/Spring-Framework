<?xml version="1.0" encoding="UTF-8"?>

<beans 
    xmlns = "http://www.springframework.org/schema/beans"
    xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context = "http://www.springframework.org/schema/context"
    xsi:schemaLocation = "http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd"
    
>


    <bean id="shape" class="io.summer.Part13.Circle">
        <!-- <property name="center" ref="pointA" /> -->  <!-- @Required -->
    </bean>

    <bean id="pointA" class="io.summer.Part13.Point">
        <qualifier value="circleCenter"/>
        <property name="x" value="0" />
        <property name="y" value="0" />
    </bean>

    <bean id="pointB" class="io.summer.Part13.Point">
        <property name="x" value="9" />
        <property name="y" value="9" />
    </bean>

    <!-- BeanPostProcessor -->
    
    <!-- BeanPostProcessor makes sure that all @Required / @Autowired  dependencies are available for each of the components in the current package and its sub-packages otherwise throws exception -->

    <!-- @Required -->
    <!-- <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/> -->
    <!-- @Autowired -->
    <!-- <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> -->
    

    <!-- Instead of adding each Bean Post Processor -->
    <context:annotation-config />

</beans>